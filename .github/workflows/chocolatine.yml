name: Pain_au_chocolat-Epitech
on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:BebeSniffeur/mirroring_test.git"
  EXECUTABLES: "mysh"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - name: Check Coding Style
        run: |
          CODING_STYLE_ERRORS=$(check.sh $(pwd) $(pwd))
          echo $CODING_STYLE_ERRORS
          cat coding-style-reports.log
          for ERRORS in $CODING_STYLE_ERRORS; do
            array=(`echo $ERRORS | sed 's/:/\n/g'`)
            echo "::error file=${array[1]#./},title=${array[3]#./} coding style errors detected: ${array[2]#./}::${array[4]#./}"
          done
          if [[ -n $CODING_STYLE_ERRORS ]]
          then
            exit 1
          else
            echo No coding style errors detected
          fi

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: make
      - name: Verify Executables
        run: |
          for exe in $(echo "$EXECUTABLES" | tr ',' ' '); do
            if [ ! -x "$exe" ]; then
              echo "$exe is not executable or does not exist!"
              exit 1
            fi
          done
      - name: Clean
        run: make clean

  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: Run Tests
        run: make tests_run

  push_to_mirror:
    needs: run_tests
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1.1.1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}